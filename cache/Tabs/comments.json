{
  "Tabs.props.ts": [
    {
      "comments": [
        {
          "line": 3,
          "comment": "Defines the structure for the TabsProps with the necessary properties for tabs.",
          "codeSnippet": "expo"
        },
        {
          "line": 4,
          "comment": "Declares an array of tabs, expecting each element to conform to the Tab interface.",
          "codeSnippet": "tabs"
        },
        {
          "line": 5,
          "comment": "Allows for optional styling to be applied to the tabs via a TabsStyles object.",
          "codeSnippet": "styl"
        },
        {
          "line": 7,
          "comment": "Extends TabsProps to include properties specific to the view component of the tabs.",
          "codeSnippet": "expo"
        },
        {
          "line": 8,
          "comment": "Holds the current active Tab object.",
          "codeSnippet": "isAc"
        },
        {
          "line": 9,
          "comment": "Provides a dispatch function to update the active tab state.",
          "codeSnippet": "setI"
        },
        {
          "line": 10,
          "comment": "Represents the current state of the tabs, allowing dynamic changes.",
          "codeSnippet": "tabs"
        },
        {
          "line": 11,
          "comment": "Gives a dispatch function to set the tabs' array, enabling state management for tabs.",
          "codeSnippet": "setT"
        }
      ]
    }
  ],
  "Tabs.state.ts": [
    {
      "comments": [
        {
          "line": 3,
          "comment": "Initializes a custom hook for managing tab states with an array of 'Tab' objects passed as properties.",
          "codeSnippet": "expo"
        },
        {
          "line": 4,
          "comment": "Creates 'isActive' state to track the currently active tab using the first tab object from 'propTabs' array as the initial state.",
          "codeSnippet": "cons"
        },
        {
          "line": 5,
          "comment": "Creates 'tabsState' to keep the state of all tabs, initialized with 'propTabs' array.",
          "codeSnippet": "cons"
        },
        {
          "line": 6,
          "comment": "Begins the return object which exposes the state and setters for managing the tabs.",
          "codeSnippet": "retu"
        },
        {
          "line": 7,
          "comment": "Exposes the state of the currently active tab.",
          "codeSnippet": "isAc"
        },
        {
          "line": 8,
          "comment": "Exposes the setter function to update the currently active tab.",
          "codeSnippet": "setI"
        },
        {
          "line": 9,
          "comment": "Exposes the array of tabs state for external use.",
          "codeSnippet": "tabs"
        },
        {
          "line": 10,
          "comment": "Exposes the function to update the overall tabs state.",
          "codeSnippet": "setT"
        },
        {
          "line": 11,
          "comment": "Closes the return object that encapsulates the state and setter functions for tabs.",
          "codeSnippet": "}"
        }
      ]
    }
  ],
  "Tabs.type.d.ts": [
    {
      "comments": [
        {
          "line": 3,
          "comment": "Declare the 'Tab' type with required title and value properties, and an optional content property that can be a string, a React node, or any type.",
          "codeSnippet": "expor"
        },
        {
          "line": 8,
          "comment": "Declare the 'TabsStyles' type for styling the tab components, with optional properties to customize container, active/inactive tabs, text, content display, and the header tabs.",
          "codeSnippet": "expor"
        }
      ]
    }
  ],
  "Tabs.view.tsx": [
    {
      "comments": [
        {
          "line": 8,
          "comment": "Defines a functional component 'TabsView' with props of type 'TabsViewProps'.",
          "codeSnippet": "expo"
        },
        {
          "line": 9,
          "comment": "Destructures 'tabs', 'styles', 'isActive', 'setIsActive', 'tabsState', and 'setTabsState' from the component props.",
          "codeSnippet": "cons"
        },
        {
          "line": 11,
          "comment": "Declares a function 'moveSelectedTabToTop' that takes an index and modifies the tabs order.",
          "codeSnippet": "cons"
        },
        {
          "line": 12,
          "comment": "Creates a copy of the 'tabs' array from props to be altered.",
          "codeSnippet": "cons"
        },
        {
          "line": 13,
          "comment": "Removes the tab at the provided index, effectively selecting this tab.",
          "codeSnippet": "cons"
        },
        {
          "line": 14,
          "comment": "Places the selected tab at the start of the 'newTabs' array.",
          "codeSnippet": "newT"
        },
        {
          "line": 15,
          "comment": "Updates the state with the reordered tabs.",
          "codeSnippet": "setT"
        },
        {
          "line": 16,
          "comment": "Sets the active tab to the first tab in the 'newTabs' array.",
          "codeSnippet": "setI"
        },
        {
          "line": 18,
          "comment": "Defines a function 'isContentActive' that checks if the given tab's content is to be displayed.",
          "codeSnippet": "cons"
        },
        {
          "line": 19,
          "comment": "Returns a boolean indicating if the given tab is identical to the first tab in 'tabsState'.",
          "codeSnippet": "retu"
        },
        {
          "line": 24,
          "comment": "Iterates over 'tabs' to render a 'Button' for each tab using .map().",
          "codeSnippet": "{tab"
        },
        {
          "line": 27,
          "comment": "Assigns 'onClick' handler to move the clicked tab to the top when a tab is selected.",
          "codeSnippet": "onCl"
        },
        {
          "line": 30,
          "comment": "Sets the button variant dynamically based on whether the tab is active or not.",
          "codeSnippet": "vari"
        },
        {
          "line": 35,
          "comment": "Applies additional styles to the button if it represents the currently active tab.",
          "codeSnippet": "{...(i"
        },
        {
          "line": 37,
          "comment": "Wraps the tab's title in a 'Text' component to be rendered inside each button.",
          "codeSnippet": "<Tex"
        },
        {
          "line": 47,
          "comment": "Maps over 'tabsState' to conditionally render content for the active tab.",
          "codeSnippet": "{tab"
        }
      ]
    }
  ],
  "Tabs.tsx": [
    {
      "comments": [
        {
          "line": 5,
          "comment": "Defines a functional React component TabsComponent that expects TabsProps with destructured tabs and styles.",
          "codeSnippet": "cons"
        },
        {
          "line": 6,
          "comment": "Uses custom hook useTabsState to manage tab activation state and the overall state of tabs.",
          "codeSnippet": "  co"
        },
        {
          "line": 7,
          "comment": "Begins JSX return block for the component rendering.",
          "codeSnippet": "  re"
        },
        {
          "line": 18,
          "comment": "Exports the TabsComponent as Tabs wrapped in React.memo for performance optimization, preventing unnecessary re-renders.",
          "codeSnippet": "expo"
        }
      ]
    }
  ]
}