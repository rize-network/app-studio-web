{
  "componentDescription": "Enables users to select a date from a calendar-style interface.",
  "id": {
    "type": [
      "string"
    ],
    "typeValues": [],
    "description": "Optional 'id' prop to uniquely identify the date picker component.",
    "defaultValue": []
  },
  "icon": {
    "type": [
      "React.ReactNode"
    ],
    "typeValues": [],
    "description": "Prop to allow the passing of a ReactNode, typically for an icon display inside the date picker.",
    "defaultValue": []
  },
  "error": {
    "type": [
      "boolean"
    ],
    "typeValues": [
      "true",
      "false"
    ],
    "description": "Indicates whether the date picker has an error state.",
    "defaultValue": [
      "false"
    ]
  },
  "helperText": {
    "type": [
      "string"
    ],
    "typeValues": [],
    "description": "Helper text to display additional information or guidance for the date picker.",
    "defaultValue": []
  },
  "name": {
    "type": [
      "string"
    ],
    "typeValues": [],
    "description": "The 'name' prop is often used to identify the form data after the form has been submitted.",
    "defaultValue": []
  },
  "colorScheme": {
    "type": [
      "string"
    ],
    "typeValues": [],
    "description": "Optional color scheme to theme the date picker component.",
    "defaultValue": [
      "theme.primary"
    ]
  },
  "isReadOnly": {
    "type": [
      "boolean"
    ],
    "typeValues": [
      "true",
      "false"
    ],
    "description": "Determines if the date picker is read-only.",
    "defaultValue": [
      "false"
    ]
  },
  "isDisabled": {
    "type": [
      "boolean"
    ],
    "typeValues": [
      "true",
      "false"
    ],
    "description": "Controls whether the date picker is disabled and unmodifiable by the user.",
    "defaultValue": [
      "false"
    ]
  },
  "label": {
    "type": [
      "string"
    ],
    "typeValues": [],
    "description": "The label text for the date picker component.",
    "defaultValue": []
  },
  "onChange": {
    "type": [
      "function"
    ],
    "typeValues": [],
    "description": "onChange event handler that is called when the value of the date picker changes.",
    "defaultValue": []
  },
  "onChangeText": {
    "type": [
      "function"
    ],
    "typeValues": [],
    "description": "Callback function when the text within the date picker is changed.",
    "defaultValue": []
  },
  "styles": {
    "type": [
      "DatePickerStyles"
    ],
    "typeValues": [
      {
        "box": "CSSProperties",
        "label": "CSSProperties",
        "helperText": "CSSProperties",
        "text": "CSSProperties",
        "field": "CSSProperties"
      }
    ],
    "description": "Allows for custom styles to be applied to the date picker.",
    "defaultValue": [
      {
        "box": {},
        "label": {},
        "helperText": {},
        "text": {},
        "field": {}
      }
    ]
  },
  "shape": {
    "type": [
      "Shape"
    ],
    "typeValues": [
      "default",
      "sharp",
      "rounded",
      "pillShaped"
    ],
    "description": "Prop to define the shape of the date picker input, controlling border-radius, for example.",
    "defaultValue": [
      "default"
    ]
  },
  "variant": {
    "type": [
      "Variant"
    ],
    "typeValues": [
      "default",
      "outline",
      "none"
    ],
    "description": "Defines the visual style of the date picker component.",
    "defaultValue": [
      "default"
    ]
  },
  "size": {
    "type": [
      "Size"
    ],
    "typeValues": [
      "xs",
      "sm",
      "md",
      "lg",
      "xl"
    ],
    "description": "Prop to set the size of the date picker component.",
    "defaultValue": [
      "md"
    ]
  },
  "shadow": {
    "type": [
      "Shadow",
      "Elevation",
      "CSSProperties"
    ],
    "typeValues": [],
    "description": "The shadow prop can accept a predefined Shadow, an Elevation value, or custom CSSProperties for styling.",
    "defaultValue": [
      {}
    ]
  },
  "date": {
    "type": [
      "string"
    ],
    "typeValues": [],
    "description": "Represents the currently selected date as a string.",
    "defaultValue": []
  },
  "setDate": {
    "type": [
      "function"
    ],
    "typeValues": [],
    "description": "Function to update the state with a new date whenever the date is changed.",
    "defaultValue": [
      "() => {}"
    ]
  },
  "isHovered": {
    "type": [
      "boolean"
    ],
    "typeValues": [
      "true",
      "false"
    ],
    "description": "State that keeps track of whether the date picker is hovered by the user.",
    "defaultValue": [
      "false"
    ]
  },
  "setIsHovered": {
    "type": [
      "function"
    ],
    "typeValues": [],
    "description": "Function to set the isHovered state, determining if the date picker is currently being hovered.",
    "defaultValue": [
      "() => {}"
    ]
  },
  "isFocused": {
    "type": [
      "boolean"
    ],
    "typeValues": [
      "true",
      "false"
    ],
    "description": "Holds the focus state of the date picker.",
    "defaultValue": [
      "false"
    ]
  },
  "setIsFocused": {
    "type": [
      "function"
    ],
    "typeValues": [],
    "description": "Function to set the isFocused state, indicating if the date picker has focus.",
    "defaultValue": [
      "() => {}"
    ]
  }
}